{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guigay\\\\Desktop\\\\JS-scripts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = '';\n      var x = 0;\n      var z = 0; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif', 'video/mp4']; // loop access array\n\n      for (x; x < files.length; x++) {\n        // compare file type find doesn't matach\n        // eslint-disable-next-line\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (z = 0; z < err.length; z++) {\n        // loop create toast massage\n        event.target.value = null;\n        toast.error(err[z]);\n      }\n\n      return true;\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files[0];\n\n      if (this.checkMimeType(event)) {\n        // if return true allow to setState\n        console.log(\"all right\");\n        this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n      data.append('file', this.state.selectedFile);\n      axios.post(\"http://localhost:8000/upload\", data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        } // receive two    parameter endpoint url ,form data\n\n      }).then(res => {\n        toast.success('upload success');\n      }).catch(err => {\n        toast.error('upload fail');\n      });\n    };\n\n    this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"#\",\n      id: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Upload Your File \"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      multiple: \"\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Upload\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\guigay\\Desktop\\JS-scripts\\src\\App.js"],"names":["React","Component","axios","Progress","ToastContainer","toast","App","constructor","props","checkMimeType","event","files","target","err","x","z","types","length","every","type","value","error","onChangeHandler","console","log","setState","selectedFile","loaded","onClickHandler","data","FormData","append","state","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","render","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport axios from 'axios'\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        loaded: 0\n      }\n   \n  }\n\n  checkMimeType=(event)=>{\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = ''\n    var x = 0\n    var z = 0\n    // list allow mime type\n    const types = ['image/png', 'image/jpeg', 'image/gif', 'video/mp4']\n    // loop access array\n    for(x; x<files.length; x++) {\n    // compare file type find doesn't matach\n    // eslint-disable-next-line\n        if (types.every(type => files[x].type !== type)) {\n        // create error message and assign to container   \n        err += files[x].type+' is not a supported format\\n';\n        }\n      };\n  \n      for(z = 0; z<err.length; z++) { // loop create toast massage\n        event.target.value = null \n        toast.error(err[z])\n    }\n\n    return true;\n  \n  }\n\n  onChangeHandler=event=>{\n    var files = event.target.files[0]\n    if(this.checkMimeType(event)){ \n    // if return true allow to setState\n      console.log(\"all right\")\n      this.setState({\n      selectedFile: files,\n      loaded: 0\n      })\n    }\n  }\n\n  onClickHandler = () => {\n    const data = new FormData()\n    data.append('file', this.state.selectedFile)\n    axios.post(\"http://localhost:8000/upload\", data, { \n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n        })}\n      // receive two    parameter endpoint url ,form data\n    }).then(res => { \n      toast.success('upload success')\n  })\n  .catch(err => { \n      toast.error('upload fail')\n  })\n    \n  }\n\n  render() {\n    return (\n    <div className=\"form-group\">\n      <ToastContainer />\n    <div className=\"container\">\n\t    <div className=\"row\">\n\t      <div className=\"col-md-6\">\n\t        <form method=\"post\" action=\"#\" id=\"#\">\n            <div className=\"form-group files\">\n                <label>Upload Your File </label>\n                <input type=\"file\" className=\"form-control\" name=\"file\" multiple=\"\" onChange={this.onChangeHandler}></input> \n            </div>\n            <div className=\"form-group\">\n          <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n          </div>\n          <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n          </form>\n        </div>\n\t    </div>\n  </div>\n  </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}