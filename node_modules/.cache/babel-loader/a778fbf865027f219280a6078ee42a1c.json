{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guigay\\\\Desktop\\\\JS-scripts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = ''; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif', 'video/mp4']; // loop access array\n\n      for (var x = 0; x < files.length; x++) {\n        // compare file type find doesn't matach\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      if (err !== '') {\n        // if message not same old that mean has error \n        event.target.value = null; // discard selected file\n\n        console.log(err);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files;\n\n      if (this.checkMimeType(event)) {\n        // if return true allow to setState\n        this.setState({\n          selectedFile: files\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n      data.append('file', this.state.selectedFile);\n      axios.post(\"http://localhost:8000/upload\", data, {// receive two    parameter endpoint url ,form data\n      }).then(res => {\n        // then print response status\n        console.log(res.statusText);\n      });\n    };\n\n    this.state = {\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"#\",\n      id: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Upload Your File \"), React.createElement(\"input\", {\n      type: \"file\",\n      class: \"form-control\",\n      name: \"file\",\n      multiple: \"\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Upload\"), \"             \")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\guigay\\Desktop\\JS-scripts\\src\\App.js"],"names":["React","Component","axios","App","constructor","props","checkMimeType","event","files","target","err","types","x","length","every","type","value","console","log","onChangeHandler","setState","selectedFile","onClickHandler","data","FormData","append","state","post","then","res","statusText","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null\n      }\n   \n  }\n\n  checkMimeType=(event)=>{\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = ''\n    // list allow mime type\n   const types = ['image/png', 'image/jpeg', 'image/gif', 'video/mp4']\n    // loop access array\n    for(var x = 0; x<files.length; x++) {\n     // compare file type find doesn't matach\n         if (types.every(type => files[x].type !== type)) {\n         // create error message and assign to container   \n         err += files[x].type+' is not a supported format\\n';\n       }\n     };\n  \n   if (err !== '') { // if message not same old that mean has error \n        event.target.value = null // discard selected file\n        console.log(err)\n         return false; \n    }\n   return true;\n  \n  }\n\n  onChangeHandler=event=>{\n    var files = event.target.files\n    if(this.checkMimeType(event)){ \n    // if return true allow to setState\n       this.setState({\n       selectedFile: files\n        })\n    }\n  }\n\n  onClickHandler = () => {\n    const data = new FormData()\n    data.append('file', this.state.selectedFile)\n    axios.post(\"http://localhost:8000/upload\", data, { \n      // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n    console.log(res.statusText)\n    })\n    }\n\n  render() {\n    return (\n    \n    <div class=\"container\">\n\t    <div class=\"row\">\n\t      <div class=\"col-md-6\">\n\t        <form method=\"post\" action=\"#\" id=\"#\">\n            <div class=\"form-group files\">\n                <label>Upload Your File </label>\n                <input type=\"file\" class=\"form-control\" name=\"file\" multiple=\"\" onChange={this.onChangeHandler}></input>\n                <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>             </div>\n          </form>\n        </div>\n\t    </div>\n  </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}