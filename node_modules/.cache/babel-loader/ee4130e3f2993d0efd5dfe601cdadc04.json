{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guigay\\\\Desktop\\\\JS-scripts\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkMimeType = event => {\n      //getting file object\n      let files = event.target.files; //define message container\n\n      let err = '';\n      var x = 0; // list allow mime type\n\n      const types = ['image/png', 'image/jpeg', 'image/gif', 'video/mp4']; // loop access array\n\n      for (x; x < files.length; x++) {\n        // compare file type find doesn't matach\n        // eslint-disable-next-line\n        if (types.every(type => files[x].type !== type)) {\n          // create error message and assign to container   \n          err += files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      if (err !== '') {\n        // if message not same old that mean has error \n        event.target.value = null; // discard selected file\n\n        console.log(err);\n        return false;\n      }\n\n      console.log(\"true\");\n      return true;\n    };\n\n    this.onChangeHandler = event => {\n      var files = event.target.files[0];\n\n      if (this.checkMimeType(event)) {\n        // if return true allow to setState\n        console.log(\"all right\");\n        this.setState({\n          selectedFile: files,\n          loaded: 0\n        });\n      }\n    };\n\n    this.onClickHandler = () => {\n      const data = new FormData();\n      data.append('file', this.state.selectedFile);\n      axios.post(\"http://localhost:8000/upload\", data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        } // receive two    parameter endpoint url ,form data\n\n      }).then(res => {\n        // then print response status\n        console.log(res.statusText);\n      });\n    };\n\n    this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      action: \"#\",\n      id: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Upload Your File \"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"file\",\n      multiple: \"\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-block\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\guigay\\Desktop\\JS-scripts\\src\\App.js"],"names":["React","Component","axios","Progress","App","constructor","props","checkMimeType","event","files","target","err","x","types","length","every","type","value","console","log","onChangeHandler","setState","selectedFile","loaded","onClickHandler","data","FormData","append","state","post","onUploadProgress","ProgressEvent","total","then","res","statusText","render","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport axios from 'axios'\nimport {Progress} from 'reactstrap';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        selectedFile: null,\n        loaded: 0\n      }\n   \n  }\n\n  checkMimeType=(event)=>{\n    //getting file object\n    let files = event.target.files \n    //define message container\n    let err = ''\n    var x = 0\n    // list allow mime type\n    const types = ['image/png', 'image/jpeg', 'image/gif', 'video/mp4']\n    // loop access array\n    for(x; x<files.length; x++) {\n    // compare file type find doesn't matach\n    // eslint-disable-next-line\n        if (types.every(type => files[x].type !== type)) {\n        // create error message and assign to container   \n        err += files[x].type+' is not a supported format\\n';\n        }\n      };\n  \n    if (err !== '') { // if message not same old that mean has error \n      event.target.value = null // discard selected file\n      console.log(err)\n      return false; \n    }\n\n    console.log(\"true\")\n\n    return true;\n  \n  }\n\n  onChangeHandler=event=>{\n    var files = event.target.files[0]\n    if(this.checkMimeType(event)){ \n    // if return true allow to setState\n      console.log(\"all right\")\n      this.setState({\n      selectedFile: files,\n      loaded: 0\n      })\n    }\n  }\n\n  onClickHandler = () => {\n    const data = new FormData()\n    data.append('file', this.state.selectedFile)\n    axios.post(\"http://localhost:8000/upload\", data, { \n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100)\n        })}\n      // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n      console.log(res.statusText)\n    })\n  }\n\n  render() {\n    return (\n    \n    <div class=\"container\">\n\t    <div class=\"row\">\n\t      <div class=\"col-md-6\">\n\t        <form method=\"post\" action=\"#\" id=\"#\">\n            <div class=\"form-group files\">\n                <label>Upload Your File </label>\n                <input type=\"file\" className=\"form-control\" name=\"file\" multiple=\"\" onChange={this.onChangeHandler}></input> \n            </div>\n            <div class=\"form-group\">\n          <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n          </div>\n          <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n          </form>\n        </div>\n\t    </div>\n  </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}